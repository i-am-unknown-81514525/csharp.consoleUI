name: Build libstdin_handler library

on:
  push:
    paths:
      - "stdin_handler/**"
  pull_request:
    paths:
      - "stdin_handler/**"
  workflow_dispatch:

jobs:
  os_matrix:
    strategy:
      matrix:
        osKind: [windows, macos, linux]
        arch: [x86_64, aarch64]
        include:
          - osKind: windows
            os: windows-latest
            ext: dll
          - osKind: macos
            os: macos-latest
            ext: dylib
          - osKind: linux
            os: ubuntu-latest
            ext: so
          - osKind: windows
            arch: aarch64
            toolchain: aarch64-pc-windows-msvc
            os: windows-11-arm
          - osKind: macos
            arch: x86_64
            toolchain: x86_64-apple-darwin
            os: macos-latest
          - osKind: windows
            arch: x86_64
            toolchain: x86_64-pc-windows-gnu
          - osKind: macos
            arch: aarch64
            toolchain: aarch64-apple-darwin
          - osKind: linux
            arch: x86_64
            toolchain: x86_64-unknown-linux-gnu
          - osKind: linux
            arch: aarch64
            toolchain: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - if: matrix.os == 'windows-11-arm'
      name: Install rustup on Windows ARM
      run: |
          curl -LOs https://static.rust-lang.org/rustup/dist/aarch64-pc-windows-msvc/rustup-init.exe
          ./rustup-init.exe -y --default-toolchain none --no-modify-path
          echo "$USERPROFILE/.cargo/bin" >> "$GITHUB_PATH"
    - if: matrix.os != 'window-11-arm'
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        rustflags: ""
    - if: matrix.os != 'window-11-arm'
      name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        target: ${{ matrix.toolchain }}
        toolchain: stable
        override: true
    - name: Build Release
      working-directory: ./stdin_handler
      run: cargo build --release 
    - name: Rename file
      if: ${{ matrix.ext == 'dll' }}
      working-directory: ./stdin_handler
      run: "cp target/release/stdin_handler.dll target/release/libstdin_handler.dll"
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rust-${{ matrix.osKind }}-${{ matrix.arch }}
        path: ./stdin_handler/target/release/libstdin_handler.${{ matrix.ext }}







